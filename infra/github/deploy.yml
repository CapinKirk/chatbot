name: Deploy
on:
  push:
    tags:
      - 'v*'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build images
        run: |
          docker build -f services/api/Dockerfile -t ghcr.io/${{ github.repository }}/api:${{ github.ref_name }} .
          docker build -f services/ai-bot/Dockerfile -t ghcr.io/${{ github.repository }}/ai-bot:${{ github.ref_name }} .
          docker build -f apps/web/Dockerfile -t ghcr.io/${{ github.repository }}/web:${{ github.ref_name }} .
          docker build -f apps/admin/Dockerfile -t ghcr.io/${{ github.repository }}/admin:${{ github.ref_name }} .
      - name: Push images
        run: |
          docker push ghcr.io/${{ github.repository }}/api:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/ai-bot:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/web:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/admin:${{ github.ref_name }}

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/chat-refactor && cd ~/chat-refactor
            cat > docker-compose.yml <<'YML'
            version: '3.9'
            services:
              api:
                image: ghcr.io/${{ github.repository }}/api:${{ github.ref_name }}
                environment:
                  DATABASE_URL: ${{ secrets.POSTGRES_URL }}
                  REDIS_URL: ${{ secrets.REDIS_URL }}
                  AI_BOT_URL: http://ai:4100/classify
                  WEB_PUSH_VAPID_PUBLIC_KEY: ${{ secrets.WEB_PUSH_VAPID_PUBLIC_KEY }}
                  WEB_PUSH_VAPID_PRIVATE_KEY: ${{ secrets.WEB_PUSH_VAPID_PRIVATE_KEY }}
                ports: ["4000:4000"]
                depends_on: [ai]
              ai:
                image: ghcr.io/${{ github.repository }}/ai-bot:${{ github.ref_name }}
                ports: ["4100:4100"]
              web:
                image: ghcr.io/${{ github.repository }}/web:${{ github.ref_name }}
                environment:
                  NEXT_PUBLIC_API_HTTP: http://api:4000
                  NEXT_PUBLIC_API_WS: http://api:4000
                  NEXT_PUBLIC_VAPID_PUBLIC_KEY: ${{ secrets.WEB_PUSH_VAPID_PUBLIC_KEY }}
                ports: ["8080:3000"]
                depends_on: [api]
              admin:
                image: ghcr.io/${{ github.repository }}/admin:${{ github.ref_name }}
                environment:
                  NEXTAUTH_URL: ${{ secrets.STAGING_URL }}/admin
                  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
                  EMAIL_SERVER_HOST: mailhog
                  EMAIL_SERVER_PORT: 1025
                ports: ["8081:3001"]
              mailhog:
                image: mailhog/mailhog:v1.0.1
                ports: ["1025:1025", "8025:8025"]
            YML
            docker compose pull
            docker compose up -d
      - name: E2E against staging
        run: |
          npx -y playwright-cli install --with-deps
          E2E_BASE_URL=${{ secrets.STAGING_URL }} pnpm -C apps/web e2e || exit 1

  approve-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ secrets.PRODUCTION_URL }}
    steps:
      - name: Await manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1

  deploy-production:
    needs: approve-production
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/chat-refactor
            docker compose pull
            docker compose up -d
      - name: Smoke test
        run: |
          curl -fsSL ${{ secrets.PRODUCTION_URL }}/api/healthz
name: Deploy
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build artifacts
        run: |
          echo "Build and upload artifacts here (placeholder)"
      - name: Deploy to staging
        run: echo "Deploying to staging..." && sleep 1
      - name: Manual approval for production
        uses: superbrothers/merge-approval@v3
        with:
          reviewers: ''
      - name: Deploy to production
        run: echo "Deploying to production after approval..." && sleep 1


