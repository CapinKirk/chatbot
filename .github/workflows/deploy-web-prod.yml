name: Deploy Web to Vercel (Production)
on:
  push:
    tags:
      - "v*"

jobs:
  deploy-web-production:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    defaults:
      run:
        working-directory: apps/web
    steps:
      - uses: actions/checkout@v4

      - name: Write .vercel/project.json from secrets if provided
        if: ${{ secrets.WEB_VERCEL_PROJECT_ID && secrets.VERCEL_ORG_ID }}
        run: |
          mkdir -p .vercel
          cat > .vercel/project.json <<JSON
          { "projectId": "${{ secrets.WEB_VERCEL_PROJECT_ID }}", "orgId": "${{ secrets.VERCEL_ORG_ID }}" }
          JSON

      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Create .env.production from GitHub Secrets and Vars
        run: |
          cat > ../../.env.production <<'EOF'
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET_PRODUCTION }}
          NEXTAUTH_URL=${{ vars.ADMIN_PRODUCTION_URL }}
          WEB_PUSH_VAPID_PUBLIC_KEY=${{ secrets.WEB_PUSH_VAPID_PUBLIC_KEY_PRODUCTION }}
          WEB_PUSH_VAPID_PRIVATE_KEY=${{ secrets.WEB_PUSH_VAPID_PRIVATE_KEY_PRODUCTION }}
          API_BASE_URL=${{ vars.API_PRODUCTION_URL }}
          EOF

      - name: Push env to Vercel Production
        run: bash ../../scripts/vercel-sync-env.sh production ../../.env.production

      - name: Pull Vercel env to local for build context
        run: vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Build
        run: vercel build --prod --token "$VERCEL_TOKEN"

      - name: Deploy production
        run: vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN"

