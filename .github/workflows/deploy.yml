name: Deploy
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build images
        run: |
          docker build -f services/api/Dockerfile -t ghcr.io/${{ github.repository }}/api:${{ github.ref_name }} .
          docker build -f services/ai-bot/Dockerfile -t ghcr.io/${{ github.repository }}/ai-bot:${{ github.ref_name }} .
      - name: Push images
        run: |
          docker push ghcr.io/${{ github.repository }}/api:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }}/ai-bot:${{ github.ref_name }}

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/chat-refactor && cd ~/chat-refactor
            cat > .env.staging <<'ENV'
            DATABASE_URL=${{ secrets.POSTGRES_URL }}
            DIRECT_URL=${{ secrets.DIRECT_URL }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ secrets.STAGING_URL }}/admin
            EMAIL_SERVER_HOST=${{ secrets.EMAIL_SERVER_HOST }}
            EMAIL_SERVER_PORT=${{ secrets.EMAIL_SERVER_PORT }}
            EMAIL_FROM=${{ secrets.EMAIL_FROM }}
            WEB_PUSH_VAPID_PUBLIC_KEY=${{ secrets.WEB_PUSH_VAPID_PUBLIC_KEY }}
            WEB_PUSH_VAPID_PRIVATE_KEY=${{ secrets.WEB_PUSH_VAPID_PRIVATE_KEY }}
            STAGING_URL=${{ secrets.STAGING_URL }}
            ENV
            cat > docker-compose.yml <<'YML'
            version: '3.9'
            services:
              api:
                image: ghcr.io/${{ github.repository }}/api:${{ github.ref_name }}
                env_file: ./.env.staging
                environment:
                  AI_BOT_URL: http://ai:4100/classify
                ports: ["4000:4000"]
                depends_on: [ai]
              ai:
                image: ghcr.io/${{ github.repository }}/ai-bot:${{ github.ref_name }}
                ports: ["4100:4100"]
            YML
            docker compose pull
            docker compose up -d
      - name: Health checks
        run: |
          curl -fsSL ${{ secrets.STAGING_URL }}/api/healthz

  approve-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Await manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1

  deploy-production:
    needs: approve-production
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/chat-refactor
            docker compose pull
            docker compose up -d
      - name: Smoke
        run: |
          curl -fsSL ${{ secrets.PRODUCTION_URL }}/api/healthz

